diff --git a/lab2.diff b/lab2.diff
new file mode 100644
index 0000000..e69de29
diff --git a/postbuild/paths.cmd b/postbuild/paths.cmd
index cec924b..fc2fac1 100644
--- a/postbuild/paths.cmd
+++ b/postbuild/paths.cmd
@@ -12,6 +12,7 @@ set PATH_TO_VM_DISK=__EMPTY__
 set PATH_TO_VM_TOOLS=__EMPTY__
 set VOL_MOUNT_LETTER=__EMPTY__
 
+if _%COMPUTERNAME%_==_ELEVENPM-XPS15_ goto config_ELEVENPM-XPS15
 if _%COMPUTERNAME%_==_AGURZOU-DEV-PC_ goto config_AGURZOU-DEV
 if _%COMPUTERNAME%_==_ALEX-PC_ goto config_ALEX-PC
 if _%COMPUTERNAME%_==_AGURZOU-LPT_ goto config_AGURZOU-LPT
@@ -69,4 +70,13 @@ set BOCHS_PATH="c:\Program Files (x86)\Bochs-2.6.8\"
 
 goto end
 
+:config_ELEVENPM-XPS15
+
+SET PATH_TO_VM_FILE="D:\OSD\HAL9000folder-20201002\HAL9000\VM\HAL9000_VM\HAL9000.vmx"
+SET PATH_TO_LOG_FILE="D:\OSD\HAL9000folder-20201002\HAL9000\VM\HAL9000_VM\HAL9000.log"
+SET PXE_PATH="D:\OSD\HAL9000folder-20201002\HAL9000\PXE"
+SET PATH_TO_VM_DISK="D:\OSD\HAL9000folder-20201002\HAL9000\VM\HAL9000_VM\HAL9000.vmdk"
+SET PATH_TO_VIX_TOOLS="C:\Program Files (x86)\VMware\VMware Workstation"
+goto end
+
 :end
\ No newline at end of file
diff --git a/src/HAL9000/headers/thread_internal.h b/src/HAL9000/headers/thread_internal.h
index be2588a..50f2fa5 100644
--- a/src/HAL9000/headers/thread_internal.h
+++ b/src/HAL9000/headers/thread_internal.h
@@ -38,6 +38,7 @@ typedef struct _THREAD
     struct _THREAD          *Self;
 
     TID                     Id;
+    TID                     PId;
     char*                   Name;
 
     // Currently the thread priority is not used for anything
diff --git a/src/HAL9000/src/cmd_thread_helper.c b/src/HAL9000/src/cmd_thread_helper.c
index f794c95..ea3547c 100644
--- a/src/HAL9000/src/cmd_thread_helper.c
+++ b/src/HAL9000/src/cmd_thread_helper.c
@@ -16,6 +16,7 @@
 #include "ex_timer.h"
 #include "vmm.h"
 #include "pit.h"
+#include "thread.h"
 
 
 #pragma warning(push)
@@ -129,6 +130,8 @@ void
 
     ASSERT(NumberOfParameters == 0);
 
+    LOG("NumberOfThreads: %d\n", ThreadGetNumberOfThreads());
+    LOG("%7s", "Parent TID|");
     LOG("%7s", "TID|");
     LOG("%20s", "Name|");
     LOG("%5s", "Prio|");
@@ -684,7 +687,8 @@ STATUS
     ASSERT( NULL == FunctionContext );
 
     pThread = CONTAINING_RECORD(ListEntry, THREAD, AllList );
-
+    
+    LOG("%6x%c", pThread->PId, '|');
     LOG("%6x%c", pThread->Id, '|');
     LOG("%19s%c", pThread->Name, '|');
     LOG("%4U%c", pThread->Priority, '|');
diff --git a/src/HAL9000/src/iomu.c b/src/HAL9000/src/iomu.c
index a704910..ae9c84a 100644
--- a/src/HAL9000/src/iomu.c
+++ b/src/HAL9000/src/iomu.c
@@ -28,7 +28,7 @@
 #define PIC_MASTER_OFFSET                   0x20
 #define PIC_SLAVE_OFFSET                    0x28
 
-#define SCHEDULER_TIMER_INTERRUPT_TIME_US   (40*MS_IN_US)
+#define SCHEDULER_TIMER_INTERRUPT_TIME_US   (10*MS_IN_US)
 
 #define HAL9000_SYSTEM_FILE_NAME            "HAL9000.ini"
 
diff --git a/src/HAL9000/src/system.c b/src/HAL9000/src/system.c
index b0b436e..a98af89 100644
--- a/src/HAL9000/src/system.c
+++ b/src/HAL9000/src/system.c
@@ -71,10 +71,10 @@ SystemInit(
     pCpu = NULL;
 
     LogSystemInit(LogLevelInfo,
-                  LogComponentInterrupt | LogComponentIo | LogComponentAcpi,
+                  LogComponentInterrupt | LogComponentIo | LogComponentAcpi | LogComponentGeneric,
                   TRUE
                   );
-
+    
     // if validation fails => the system will HALT
     CpuMuValidateConfiguration();
 
diff --git a/src/HAL9000/src/thread.c b/src/HAL9000/src/thread.c
index 501640f..9e90a39 100644
--- a/src/HAL9000/src/thread.c
+++ b/src/HAL9000/src/thread.c
@@ -10,9 +10,10 @@
 #include "gdtmu.h"
 #include "pe_exports.h"
 
-#define TID_INCREMENT               4
+#define TID_INCREMENT               0x10
 
-#define THREAD_TIME_SLICE           1
+//having smaller time slices can be costly because of the overhead created by context switching, so 1 * 40 and 4 * 10 are not equivalent
+#define THREAD_TIME_SLICE           4
 
 extern void ThreadStart();
 
@@ -27,6 +28,10 @@ extern FUNC_ThreadSwitch            ThreadSwitch;
 
 typedef struct _THREAD_SYSTEM_DATA
 {
+
+    _Interlocked_
+    volatile DWORD NumberOfThreads;
+
     LOCK                AllThreadsLock;
 
     _Guarded_by_(AllThreadsLock)
@@ -444,6 +449,7 @@ ThreadTick(
     {
         LOG_TRACE_THREAD("Will yield on return\n");
         pCpu->ThreadData.YieldOnInterruptReturn = TRUE;
+        //ThreadYield();
     }
 }
 
@@ -551,6 +557,8 @@ ThreadExit(
 
     pThread = GetCurrentThread();
 
+    LOG("Ended TName: %s, TId: 0x%X\n", pThread->Name, pThread->Id);
+
     CpuIntrDisable();
 
     if (LockIsOwner(&pThread->BlockLock))
@@ -562,11 +570,14 @@ ThreadExit(
     pThread->ExitStatus = ExitStatus;
     ExEventSignal(&pThread->TerminationEvt);
 
+    _InterlockedDecrement(&m_threadSystemData.NumberOfThreads);
+
     ProcessNotifyThreadTermination(pThread);
 
     LockAcquire(&m_threadSystemData.ReadyThreadsLock, &oldState);
     _ThreadSchedule();
     NOT_REACHED;
+
 }
 
 BOOLEAN
@@ -653,6 +664,11 @@ ThreadGetPriority(
     return (NULL != pThread) ? pThread->Priority : 0;
 }
 
+DWORD ThreadGetNumberOfThreads()
+{
+    return m_threadSystemData.NumberOfThreads;
+}
+
 void
 ThreadSetPriority(
     IN      THREAD_PRIORITY     NewPriority
@@ -791,14 +807,17 @@ _ThreadInit(
         strcpy(pThread->Name, Name);
 
         pThread->Id = _ThreadSystemGetNextTid();
+        pThread->PId = ThreadGetId(GetCurrentThread());
         pThread->State = ThreadStateBlocked;
         pThread->Priority = Priority;
-
+        
         LockInit(&pThread->BlockLock);
 
         LockAcquire(&m_threadSystemData.AllThreadsLock, &oldIntrState);
         InsertTailList(&m_threadSystemData.AllThreadsList, &pThread->AllList);
         LockRelease(&m_threadSystemData.AllThreadsLock, oldIntrState);
+
+        _InterlockedIncrement(&m_threadSystemData.NumberOfThreads);
     }
     __finally
     {
@@ -816,6 +835,8 @@ _ThreadInit(
         LOG_FUNC_END;
     }
 
+    LOG("Started TName: %s, TId: 0x%X\n", pThread->Name, pThread->Id);
+
     return status;
 }
 
diff --git a/src/shared/kernel/thread.h b/src/shared/kernel/thread.h
index acc7153..92629a9 100644
--- a/src/shared/kernel/thread.h
+++ b/src/shared/kernel/thread.h
@@ -119,3 +119,12 @@ THREAD_PRIORITY
 ThreadGetPriority(
     IN_OPT  PTHREAD             Thread
     );
+
+//******************************************************************************
+// Function:     ThreadGetNumberOfThreads
+// Description:  Returns the number of threads.
+// Returns:      DWORD
+// Parameter:     
+//******************************************************************************
+DWORD
+ThreadGetNumberOfThreads();
